CREDENTIALS_ENCRYPTION_KEY=Jdv9R0vj9czNy9IIH98lKQOxHkHcoOBIuyJiljj4XaE
DJANGO_SECRET_KEY=c09qc1nwcpmqtz2o7i05p@3fdc$2c@n9@sayex(zcnd94w$$r7

# Use Swift backend for recordings
RECORDING_STORAGE_BACKEND=SWIFT

# OpenStack Swift Configuration (Infomaniak) - Working Format
OS_AUTH_URL=https://api.pub1.infomaniak.cloud/identity/v3
OS_USERNAME=PCU-UNEYEHZ
OS_PASSWORD=m]}:Pz<~p6!rx3sWws
OS_REGION_NAME=dc4-a
OS_INTERFACE=public
SWIFT_CONTAINER_MEETS=transcript-meets
OS_APPLICATION_CREDENTIAL_ID=136f65e5d21f445c93b76c38e4133a52
OS_APPLICATION_CREDENTIAL_SECRET=0viFwBiuUbFSkosMu_gG32C5-ZfrFp8M8ZsagAvIESf3IeR8WHB5DeqRQ9eYCen-jCAR3TzY94bB9KQgNQIl_A

# Backup: Username/Password method (if needed)
# SWIFT_USERNAME=PCU-UNEYEHZ
# SWIFT_PASSWORD=m]}:Pz<~p6!rx3sWws
# SWIFT_TENANT_NAME=PCP-WRUWDUC

# Backup: Username/Password method (if needed)
# SWIFT_USERNAME=PCU-UNEYEHZ
# SWIFT_PASSWORD=m]}:Pz<~p6!rx3sWws
# SWIFT_TENANT_NAME=PCP-WRUWDUC

# Database (fill or use docker-compose service name)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=transcript
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Redis for Celery (docker-compose service name)
REDIS_URL=redis://redis:6379/0

# Sentry disabled for local dev
DISABLE_SENTRY=true

# Transcription API (only needed on main branch or if using external transcript API)
TRANSCRIPT_API_URL=http://host.docker.internal:8000/api
TRANSCRIPT_API_KEY=

# Optional provider keys (fill if you want to enable transcription providers)
# DEEPGRAM_API_KEY=
# OPENAI_API_KEY=
# ASSEMBLYAI_API_KEY=

# Additional optional settings
# DISABLE_SIGNUP=true
# USE_IRSA_FOR_S3_STORAGE=false