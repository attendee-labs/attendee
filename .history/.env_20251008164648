CREDENTIALS_ENCRYPTION_KEY=Jdv9R0vj9czNy9IIH98lKQOxHkHcoOBIuyJiljj4XaE
DJANGO_SECRET_KEY=c09qc1nwcpmqtz2o7i05p@3fdc$2c@n9@sayex(zcnd94w$$r7

# Use Swift backend for recordings
RECORDING_STORAGE_BACKEND=SWIFT

# OpenStack Swift Configuration (Infomaniak)
# Standard OpenStack format mapping:
# OS_AUTH_URL -> SWIFT_AUTH_URL
# OS_APPLICATION_CREDENTIAL_ID -> not used (we use username/password)
# OS_APPLICATION_CREDENTIAL_SECRET -> not used (we use username/password)  
# OS_PROJECT_ID -> could be SWIFT_TENANT_NAME
# OS_PROJECT_NAME -> SWIFT_TENANT_NAME
# OS_REGION_NAME -> not required for our implementation
# OS_INTERFACE -> not required for our implementation
# SWIFT_CONTAINER_AUDIO -> not used
# SWIFT_CONTAINER_MEETS -> SWIFT_CONTAINER_NAME

SWIFT_AUTH_URL=https://api.pub1.infomaniak.cloud/identity/v3
SWIFT_USERNAME=PCU-UNEYEHZ
SWIFT_PASSWORD=m]}:Pz<~p6!rx3sWws
SWIFT_TENANT_NAME=PCP-WRUWDUC
SWIFT_AUTH_VERSION=3
SWIFT_CONTAINER_NAME=transcript-meets
SWIFT_TEMP_URL_KEY=my-secret-temp-url-key-12345

# Database (fill or use docker-compose service name)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=transcript
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Redis for Celery (docker-compose service name)
REDIS_URL=redis://redis:6379/0

# Sentry disabled for local dev
DISABLE_SENTRY=true

# Transcription API (only needed on main branch or if using external transcript API)
TRANSCRIPT_API_URL=http://host.docker.internal:8000/api
TRANSCRIPT_API_KEY=

# Optional provider keys (fill if you want to enable transcription providers)
# DEEPGRAM_API_KEY=
# OPENAI_API_KEY=
# ASSEMBLYAI_API_KEY=

# Additional optional settings
# DISABLE_SIGNUP=true
# USE_IRSA_FOR_S3_STORAGE=false